### Eclipse Workspace Patch 1.0
#P org.eclipse.ui.workbench
Index: Eclipse UI/org/eclipse/ui/internal/IWorkbenchConstants.java
===================================================================
--- Eclipse UI/org/eclipse/ui/internal/IWorkbenchConstants.java	(revisione 1609)
+++ Eclipse UI/org/eclipse/ui/internal/IWorkbenchConstants.java	(copia locale)
@@ -348,4 +348,6 @@
     //Colors
     public static final String COLOR_HIGHLIGHT = "org.eclipse.ui.highlight"; //$NON-NLS-1$
 
+	public static final String TAG_DURABLE = "durable"; //$NON-NLS-1$
+
 }
Index: Eclipse UI/org/eclipse/ui/internal/ViewSashContainer.java
===================================================================
--- Eclipse UI/org/eclipse/ui/internal/ViewSashContainer.java	(revisione 1609)
+++ Eclipse UI/org/eclipse/ui/internal/ViewSashContainer.java	(copia locale)
@@ -118,10 +118,14 @@
                 folder.setID(partID);
                 result.add(folder.restoreState(childMem
                         .getChild(IWorkbenchConstants.TAG_FOLDER)));
-                ContainerPlaceholder placeholder = new ContainerPlaceholder(
-                        partID);
-                placeholder.setRealContainer(folder);
-                part = placeholder;
+				if (!folder.getDurable()) {
+					ContainerPlaceholder placeholder = new ContainerPlaceholder(
+							partID);
+					placeholder.setRealContainer(folder);
+					part = placeholder;
+				} else {
+					part = folder;
+				}
             }
             // 1FUN70C: ITPUI:WIN - Shouldn't set Container when not active
             part.setContainer(this);
Index: Eclipse UI/org/eclipse/ui/internal/ViewStack.java
===================================================================
--- Eclipse UI/org/eclipse/ui/internal/ViewStack.java	(revisione 1609)
+++ Eclipse UI/org/eclipse/ui/internal/ViewStack.java	(copia locale)
@@ -13,7 +13,9 @@
  *******************************************************************************/
 package org.eclipse.ui.internal;
 
+import org.eclipse.core.runtime.IStatus;
 import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.ui.IMemento;
 import org.eclipse.ui.internal.presentations.PresentablePart;
 import org.eclipse.ui.internal.presentations.PresentationFactoryUtil;
 import org.eclipse.ui.internal.presentations.SystemMenuDetach;
@@ -95,6 +97,11 @@
             return false;
         }
 
+		// Durable folders should not move
+		if (durable) {
+			return false;
+		}
+
         // We need to search if one of the presentations is not moveable
         // if that's the case the whole folder should not be moveable
         IStackPresentationSite presenationSite;
@@ -227,4 +234,17 @@
 	public boolean getDurable () {
 		return this.durable;
 	}
+
+	public IStatus saveState(IMemento memento) {
+		memento.putBoolean(IWorkbenchConstants.TAG_DURABLE, durable);
+		return super.saveState(memento);
+	}
+
+	public IStatus restoreState(IMemento memento) {
+		Boolean result = memento.getBoolean(IWorkbenchConstants.TAG_DURABLE);
+		if (result != null) {
+			this.durable = result.booleanValue();
+		}
+		return super.restoreState(memento);
+	}
 }
Index: META-INF/MANIFEST.MF
===================================================================
--- META-INF/MANIFEST.MF	(revisione 1609)
+++ META-INF/MANIFEST.MF	(copia locale)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.ui.workbench; singleton:=true
-Bundle-Version: 3.7.0.qualifier
+Bundle-Version: 3.7.0.I20110519-0100-ET
 Bundle-ClassPath: e4-workbench.jar,
  compatibility.jar,
  .
