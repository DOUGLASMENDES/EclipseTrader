<!--
   Copyright (c) 2004-2010 Marco Maccaferri and others.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Public License v1.0
   which accompanies this distribution, and is available at
   http://www.eclipse.org/legal/epl-v10.html

   Contributors:
       Marco Maccaferri - initial API and implementation
-->

<project name="Product Build">
	<property name="eclipse.home" value="${user.home}/eclipse"/>
	<property name="buildDirectory" value="${user.home}/eclipsetrader.build"/>
	<property name="baseLocation" value="${user.home}/eclipse-platform-3.5"/>

    <path id="eclipse.launcher.id">
        <fileset dir="${eclipse.home}/plugins">
            <include name="org.eclipse.equinox.launcher_*.jar"/>
        </fileset>
    </path>
    <property name="eclipse.launcher" refid="eclipse.launcher.id"/>
    <echo message="Launcher ${eclipse.launcher}"/>

    <path id="eclipse.pde.build.id">
        <dirset dir="${eclipse.home}/plugins">
            <include name="org.eclipse.pde.build_*"/>
        </dirset>
    </path>
    <property name="eclipse.pde.build" refid="eclipse.pde.build.id"/>
    <echo message="PDE Build ${eclipse.pde.build}"/>

	<available file="${buildDirectory}/label.properties" property="label.properties.exists" />
	<property file="${buildDirectory}/label.properties" />

    <available file="${buildDirectory}/wc" type="dir" property="wc.exists"/>
    <property name="repository" value="http://svn.eclipsetrader.org/svnroot/eclipsetrader"/>
    <property name="tag" value="trunk"/>

	<path id="project.classpath">
		<pathelement location="${basedir}/libs/svnjavahl.jar"/>
		<pathelement location="${basedir}/libs/svnant.jar"/>
		<pathelement location="${basedir}/libs/svnClientAdapter.jar"/>
	</path>
	<taskdef resource="svntask.properties" classpathref="project.classpath"/>

    <target name="clean">
        <delete dir="${buildDirectory}/features"/>
        <delete dir="${buildDirectory}/plugins"/>
        <delete file="${buildDirectory}/label.properties"/>
        <delete>
            <fileset dir="${buildDirectory}" includes="assemble.*"/>
            <fileset dir="${buildDirectory}" includes="package.*"/>
            <fileset dir="${buildDirectory}" includes="final*"/>
        </delete>
    </target>

    <target name="fetch" depends="fetch-checkout,fetch-update">
        <delete dir="${buildDirectory}/features"/>
        <copy todir="${buildDirectory}/features">
            <fileset dir="${buildDirectory}/wc">
                <include name="*-feature/**/*" />
            </fileset>
        </copy>
        <delete dir="${buildDirectory}/plugins"/>
        <copy todir="${buildDirectory}/plugins">
            <fileset dir="${buildDirectory}/wc">
                <include name="*/**/*" />
                <exclude name="*-feature/**/*" />
            </fileset>
        </copy>
    </target>

    <target name="fetch-checkout" description="Checking out source from repository..." unless="wc.exists">
        <svn>
            <checkout url="${repository}/${tag}" destpath="${buildDirectory}/wc" revision="HEAD"/>
        </svn>
    </target>

    <target name="fetch-update" description="Updating source from repository..." if="wc.exists">
        <svn>
            <update dir="${buildDirectory}/wc"/>
        </svn>
    </target>

	<target name="build" depends="create.label.properties">
        <replace dir="${buildDirectory}/plugins" value="${buildId}" token="@build@">
            <include name="**/about.mappings" />
        </replace>
        <replace dir="${buildDirectory}/features" value="${buildId}" token="@build@">
            <include name="**/config.ini" />
        </replace>
        
        <java jar="${eclipse.launcher}" fork="true" dir="${basedir}">
            <arg value="-application"/>
            <arg value="org.eclipse.ant.core.antRunner"/>
            <arg value="-buildfile"/>
            <arg value="${eclipse.pde.build}/scripts/productBuild/productBuild.xml"/>
            <arg value="-DbaseLocation=${baseLocation}"/>
            <arg value="-Dproduct=${basedir}/eclipsetrader.product"/>
            <arg value="-DbuildType=${buildType}"/>
            <arg value="-DbuildId=${buildId}"/>
            <arg value="-DbuildLabel=${buildLabel}"/>
            <arg value="-Dtimestamp=${timestamp}"/>
            <arg value="-DbuildDirectory=${buildDirectory}"/>
        </java>
	</target>

    <target name="create.label.properties" unless="label.properties.exists">
        <mkdir dir="${buildDirectory}" />
        
        <tstamp>
           <format property="timestamp" pattern="yyyyMMddHHmm"/>
        </tstamp>
        <property name="buildType" value="N"/>
        <property name="buildId" value="${buildType}${timestamp}"/>
        <property name="buildLabel" value="${buildType}${timestamp}"/>

        <echo file="${buildDirectory}/label.properties">
            timestamp=${timestamp}
            buildType=${buildType}
            buildId=${buildId}
            buildLabel=${buildLabel}
        </echo>
    </target>

</project>
